apiVersion: v1
kind: Namespace
metadata:
  name: demo-app
---
# Create a RWX PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: demo-app-pvc
  namespace: demo-app
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: demo-app
spec:
  replicas: 4
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: demo-app-pvc
      containers:
        - name: app
          image: ghcr.io/lucasmaurice/kube_demo_1:latest
          imagePullPolicy: Always
          args:
            - python
            - /app/app.py
            - --storage
            - /data/file.txt
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: storage
              mountPath: /data
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: http
            initialDelaySeconds: 3
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /healthz/alive
              port: http
            initialDelaySeconds: 3
            periodSeconds: 3
          securityContext:
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
---
apiVersion: v1
kind: Service
metadata:
  name: demo-app
  namespace: demo-app
spec:
  type: ClusterIP
  selector:
    app: demo-app
  ports:
    - name: http
      port: 80
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: demo-headless
  namespace: demo-app
spec:
  clusterIP: None
  selector:
    app: demo-app
  ports:
    - name: http
      port: 80
      targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-app
  namespace: demo-app
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
spec:
  tls:
    - hosts:
        - demo-app.dev.justereseau.ca
      secretName: demo-app-cert
  rules:
    - host: demo-app.dev.justereseau.ca
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: demo-app
                port:
                  number: 80
